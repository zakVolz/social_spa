{"version":3,"sources":["images/logo.png","components/Header/Header.jsx","components/Nav/FriendsBox/FriendsBox.jsx","components/Nav/Nav.jsx","redux/profileReducer.js","components/Content/Profile/Posts/Post/Post.jsx","components/Content/Profile/Posts/Posts.jsx","components/Content/Profile/Send/Send.jsx","components/Content/Profile/Send/SendContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Dialogs/DialogItem/DialogItem.jsx","components/Content/Dialogs/OpenDialog/Message/Message.jsx","redux/messagesReducer.js","components/Content/Dialogs/OpenDialog/OpenDialog.jsx","components/Content/Dialogs/OpenDialog/OpenDialogContainer.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/News/News.jsx","components/Content/Music/Music.jsx","components/Content/Settings/Settings.jsx","App.js","serviceWorker.js","redux/friendsBoxReducer.js","redux/reduxStore.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","FriendsBox","props","id","style","backgroundImage","avatar","name","Nav","renderFriends","state","map","el","key","initialStore","posts","text","likeCounter","newPostText","renderLikesCounter","value","forEach","profileReducer","action","type","idCounerPost","length","newPost","unshift","Post","onClick","e","updateCounter","target","classList","toggle","contains","dispatch","Posts","renderPosts","postsData","Send","onSubmit","sendPost","placeholder","onChange","onChangePostText","required","SendContainer","actionOnChangePostText","preventDefault","Profile","href","rel","DialogItem","Message","sort","dialogs","messages","newMessageText","messagesReducer","idCounerMessage","newMessage","push","OpenDialog","renderMessages","sendMessage","onChangeMessageText","autoFocus","OpenDialogContainer","actionOnChangeMessageText","Dialogs","renderDialogs","News","Music","Settings","App","friendsBox","path","render","profilePage","messagesPage","Boolean","window","location","hostname","match","friendsBoxReducer","reducers","combineReducers","store","createStore","renderEntireTree","ReactDOM","StrictMode","bind","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa7c05aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ec729568.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\nimport logo from '../../images/logo.png';\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <NavLink to='/profile' className=\"header__link\">\n        <img src={logo} className='header__logo' alt='logo app' />\n      </NavLink>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './FriendsBox.css';\n\nconst FriendsBox = (props) => {\n  return (\n    <li className='friends-box__item'>\n      <NavLink to={'/' + props.id} className='friends-box__link'>\n        <div className='friends-box__avatar' style={{ backgroundImage: `url(${props.avatar})` }}></div>\n        {props.name}\n      </NavLink>\n    </li>\n  )\n}\n\nexport default FriendsBox;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport FriendsBox from './FriendsBox/FriendsBox';\nimport './Nav.css';\n\nconst Nav = (props) => {\n  const renderFriends = props.state.map(el => <FriendsBox id={el.id} avatar={el.avatar} name={el.name} key={el.id} />);\n  return (\n    <nav className='nav'>\n      <ul className='nav__list'>\n        <li className='nav__item'><NavLink to='/profile' className='nav__link'>Profile</NavLink></li>\n        <li className='nav__item'><NavLink to='/dialogs' className='nav__link'>Messages</NavLink></li>\n        <li className='nav__item'><NavLink to='/news' className='nav__link'>News</NavLink></li>\n        <li className='nav__item'><NavLink to='/music' className='nav__link'>Music</NavLink></li>\n        <li className='nav__item'><NavLink to='/settings' className='nav__link'>Settings</NavLink></li>\n      </ul>\n      <NavLink to='/friends' className='friends-box__title'>Friends</NavLink>\n      <ul className='friends-box__list'>\n        {renderFriends}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Nav;\n","const ADD_POST = 'ADD-POST';\nconst UPDATE_TEXT_POST = 'UPDATE-TEXT-POST';\nconst UPDATE_LIKES_COUNTER = 'UPDATE-LIKES-COUNTER'\n\nconst initialStore = {\n  posts: [\n    { id: 0, text: 'Go drink', likeCounter: 10 },\n    { id: 1, text: 'Go dance', likeCounter: 213 },\n    { id: 2, text: 'Go fight', likeCounter: 146 },\n  ],\n  newPostText: ''\n};\n\nconst renderLikesCounter = (id, value) => {\n  initialStore.posts.forEach((el) => {\n    if (el.id === id) {\n      return el.likeCounter = value;\n    }\n  })\n};\n\nconst profileReducer = (state = initialStore, action) => {\n  switch (action.type) {\n    case UPDATE_TEXT_POST:\n      state.newPostText = action.text;\n      return state;\n    case ADD_POST:\n      let idCounerPost = state.posts.length + 1;\n      const newPost = {\n        id: idCounerPost, text: state.newPostText, likeCounter: 0\n      };\n      state.posts.unshift(newPost);\n      state.newPostText = '';\n      return state;\n    case UPDATE_LIKES_COUNTER:\n      renderLikesCounter(action.id, action.value);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport const actionSendPost = () => {\n  return {\n    type: ADD_POST\n  }\n};\n\nexport const actionOnChangePostText = (text) => {\n  return {\n    type: UPDATE_TEXT_POST,\n    text: text\n  }\n};\n\nexport const actionLikePost = (id, value) => {\n  return {\n    type: UPDATE_LIKES_COUNTER,\n    id: id,\n    value: value\n  }\n};\n\nexport default profileReducer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { actionLikePost } from '../../../../../redux/profileReducer';\nimport './Post.css';\n\nconst Post = (props) => {\n  const likeButton = (e) => {\n    let updateCounter;\n    e.target.classList.toggle('posts__like-button_active');\n    if (e.target.classList.contains('posts__like-button_active')) {\n      updateCounter = props.likeCounter + 1;\n    } else {\n      updateCounter = props.likeCounter - 1;\n    }\n    props.dispatch(actionLikePost(props.id, updateCounter))\n  }\n\n  return (\n    <div className='posts__item'>\n      <NavLink to='/profile' className='posts__avatar'></NavLink>\n      <p className='posts__text'>{props.text}</p>\n      <div className='posts__like'>\n        <button className='posts__like-button' onClick={likeButton}></button>\n        <span className='posts__like-counter'>{props.likeCounter}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport Post from './Post/Post';\n\nconst Posts = (props) => {\n  const renderPosts = props.postsData\n    .map(el => <Post text={el.text} likeCounter={el.likeCounter} id={el.id} dispatch={props.dispatch} key={el.id} />);\n  return (\n    <div className='posts'>\n      {renderPosts}\n    </div>\n  )\n}\n\nexport default Posts;\n","import React from 'react';\nimport './Send.css';\n\nconst Send = (props) => {\n  return (\n    <div className='send'>\n      <h3 className='send__title'>My posts</h3>\n      <form className='send__form' onSubmit={props.sendPost}>\n        <textarea\n          className='send__input'\n          placeholder='your news...'\n          onChange={props.onChangePostText}\n          value={props.state.newPostText}\n          required />\n        <button className='send__button'>Send</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Send;\n","import React from 'react';\nimport { actionOnChangePostText, actionSendPost } from '../../../../redux/profileReducer';\nimport Send from './Send';\n\nconst SendContainer = (props) => {\n  const onChangePostText = (e) => {\n    const text = e.target.value;\n    props.dispatch(actionOnChangePostText(text));\n  }\n  const sendPost = (e) => {\n    e.preventDefault();\n    props.dispatch(actionSendPost());\n  }\n  return <Send onChangePostText={onChangePostText}\n    sendPost={sendPost}\n    state={props.state} />\n}\n\nexport default SendContainer;\n","import React from 'react';\nimport Posts from './Posts/Posts';\nimport './Profile.css';\nimport SendContainer from './Send/SendContainer';\n\nconst Profile = (props) => {\n  return (\n    <div className='profile'>\n      <div className='profile__cover'></div>\n      <div className='profile__user'>\n        <div className='profile__avatar'></div>\n        <div className='profile__info'>\n          <h3 className='profile__item'>ZakaZak</h3>\n          <p className='profile__item'>Birtday: 22.08.1995</p>\n          <p className='profile__item'>City: St.P.</p>\n          <p className='profile__item'>Education: Y.p.</p>\n          <p className='profile__item'>Site: <a href='https://news-explorer-project.tk/' target=\"_blank\" rel=\"noreferrer noopener\" className='profile__link'>https://news-explorer-project.tk/</a></p>\n        </div>\n      </div>\n      <SendContainer state={props.state} dispatch={props.dispatch} />\n      <Posts postsData={props.state.posts} dispatch={props.dispatch} />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './DialogItem.css';\n\nconst DialogItem = (props) => {\n  return (\n    <li className='dialogs__item'>\n      <NavLink to={'/dialogs/' + props.id} className='dialogs__name'>{props.name}</NavLink>\n    </li>\n  )\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport './Message.css'\n\nconst Message = (props) => {\n  return (\n    <li className={`dialogs__message-item dialogs__message-item_${props.sort}`}>\n      <div className='dialogs__message-avatar' style={{ backgroundImage: `url(${props.avatar})` }}></div>\n      <p className='dialogs__message-text'>{props.text}</p>\n    </li>\n  )\n}\n\nexport default Message;","const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_TEXT_MESSAGE = 'UPDATE-TEXT-MESSAGE';\n\nconst initialStore = {\n  dialogs: [\n    { id: 1, name: 'William Roberts' },\n    { id: 2, name: 'Morgan Burns' },\n    { id: 3, name: 'Mason James' },\n    { id: 4, name: 'Ashton Moore' }\n  ],\n  messages: [\n    { id: 1, avatar: 'https://goo.su/2FIK', sort: 'from', text: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consectetur maiores provident eos illum praesentium fugiat aspernatur neque necessitatibus, repellendus, iusto delectus, assumenda blanditiis at aut illo similique suscipit? Voluptas, a!Amet tempore facilis blanditiis consequuntur nobis voluptates non! Odio amet voluptatum veritatis officiis perspiciatis commodi eius, delectus mollitia totam id ratione. Unde odit beatae explicabo. Quae tempora perferendis itaque alias.' },\n    { id: 2, avatar: 'https://goo.su/2FIK', sort: 'from', text: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consectetur maiores provident eos illum praesentium fugiat aspernatur neque necessitatibus, repellendus, iusto delectus, assumenda blanditiis at aut illo similique suscipit? Voluptas, a!Amet tempore facilis blanditiis consequuntur nobis voluptates non! Odio amet voluptatum veritatis officiis perspiciatis commodi eius, delectus mollitia totam id ratione. Quae tempora perferendis itaque alias.' },\n    { id: 3, avatar: 'https://goo.su/2Hbu', sort: 'in', text: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consectetur maiores provident eos illum praesentium fugiat aspernatur neque necessitatibus, repellendus, iusto delectus, assumenda blanditiis at aut illo similique suscipit? Voluptas, a!Amet tempore facilis blanditiis consequuntur nobis voluptates non! Odio amet voluptatum veritatis officiis perspiciatis commodi eius, delectus mollitia totam id ratione. Unde odit beatae explicabo.' },\n    { id: 4, avatar: 'https://goo.su/2FIK', sort: 'from', text: 'Lorem ipsum, dolor sit amet consectetur adipisicing. Unde odit beatae explicabo. Quae tempora perferendis itaque alias.' },\n    { id: 5, avatar: 'https://goo.su/2FIK', sort: 'from', text: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consectetur maiores provident eos illum praesentium fugiat aspernatur neque necessitatibus, repellendus, iusto delectus, assumenda blanditiis at aut illo similique suscipit? Voluptas, a!Amet tempore facilis blanditiis consequuntur nobis voluptates non! Odio amet voluptatum veritatis officiis perspiciatis commodi eius, delectus mollitia totam id ratione. Quae tempora perferendis itaque alias.' },\n    { id: 6, avatar: 'https://goo.su/2Hbu', sort: 'in', text: ' explicabo.' },\n    { id: 7, avatar: 'https://goo.su/2FIK', sort: 'from', text: 'Lorem ipsum, dolor sit amet consectetur adipisicing. Unde odit beatae explicabo. Quae tempora perferendis itaque alias.' }\n  ],\n  newMessageText: ''\n};\n\nconst messagesReducer = (state = initialStore, action) => {\n  switch (action.type) {\n    case UPDATE_TEXT_MESSAGE:\n      state.newMessageText = action.text;\n      return state;\n    case ADD_MESSAGE:\n      let idCounerMessage = state.messages.length + 1;\n      const newMessage = {\n        id: idCounerMessage, avatar: 'https://goo.su/2FIK', sort: 'from', text: state.newMessageText\n      };\n      state.messages.push(newMessage);\n      state.newMessageText = '';\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport const actionSendMessage = () => {\n  return {\n    type: ADD_MESSAGE\n  }\n};\n\nexport const actionOnChangeMessageText = (text) => {\n  return {\n    type: UPDATE_TEXT_MESSAGE,\n    text: text,\n  }\n};\n\nexport default messagesReducer;\n","import React from 'react';\nimport './OpenDialog.css'\n\nconst OpenDialog = (props) => {\n  return (\n    <div className='dialogs__is-open'>\n      <ul className='dialogs__message-list'>\n        {props.renderMessages}\n      </ul>\n      <form className='dialogs__send-message' onSubmit={props.sendMessage}>\n        <textarea\n          className='dialogs__input'\n          placeholder='enter a message...'\n          onChange={props.onChangeMessageText}\n          value={props.state.newMessageText}\n          autoFocus\n          required />\n        <button className='dialogs__send-button'>{'>'}</button>\n      </form>\n    </div>\n  )\n}\n\nexport default OpenDialog;\n","import React from 'react';\nimport Message from './Message/Message';\nimport { actionOnChangeMessageText, actionSendMessage } from '../../../../redux/messagesReducer';\nimport OpenDialog from './OpenDialog';\n\nconst OpenDialogContainer = (props) => {\n  const renderMessages = props.state.messages\n    .map(el => <Message avatar={el.avatar} sort={el.sort} text={el.text} key={el.id} />);\n\n  const onChangeMessageText = (e) => {\n    const text = e.target.value;\n    props.dispatch(actionOnChangeMessageText(text));\n  }\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    props.dispatch(actionSendMessage());\n  }\n\n  return (\n    <OpenDialog renderMessages={renderMessages}\n      onChangeMessageText={onChangeMessageText}\n      sendMessage={sendMessage}\n      state={props.state} />\n  )\n}\n\nexport default OpenDialogContainer;\n","import React from 'react';\nimport './Dialogs.css'\nimport DialogItem from './DialogItem/DialogItem';\nimport OpenDialogContainer from './OpenDialog/OpenDialogContainer';\n\nconst Dialogs = (props) => {\n  const renderDialogs = props.state.dialogs\n    .map(el => <DialogItem id={el.id} name={el.name} key={el.id} />);\n  return (\n    <section className='dialogs'>\n      <ul className='dialogs__list'>\n        <h1 className='dialogs__title'>Dialogs</h1>\n        {renderDialogs}\n      </ul>\n      <OpenDialogContainer\n        state={props.state}\n        dispatch={props.dispatch} />\n    </section>\n  )\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport './News.css'\n\nconst News = () => {\n  return (\n    <div className='news'>\n        <p>news</p>\n    </div>\n  )\n}\n\nexport default News;","import React from 'react';\nimport './Music.css'\n\nconst Music = () => {\n  return (\n    <div className='music'>\n        <p>Music</p>\n    </div>\n  )\n}\n\nexport default Music;","import React from 'react';\nimport './Settings.css'\n\nconst Settings = () => {\n  return (\n    <div className='settings'>\n        <p>Settings</p>\n    </div>\n  )\n}\n\nexport default Settings;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport './components/Content/Content.css'\nimport Header from './components/Header/Header';\nimport Nav from './components/Nav/Nav';\nimport Profile from './components/Content/Profile/Profile';\nimport Dialogs from './components/Content/Dialogs/Dialogs';\nimport News from './components/Content/News/News';\nimport Music from './components/Content/Music/Music';\nimport Settings from './components/Content/Settings/Settings';\n\nconst App = (props) => {\n  return (\n    <BrowserRouter>\n      <div className='root'>\n        <Header />\n        <Nav state={props.state.friendsBox} />\n        <section className='content'>\n          <Route path='/profile'\n            render={() => <Profile\n              state={props.state.profilePage}\n              dispatch={props.dispatch} />} />\n          <Route path='/dialogs'\n            render={() => <Dialogs\n              state={props.state.messagesPage}\n              dispatch={props.dispatch} />} />\n          <Route path='/news' render={() => <News />} />\n          <Route path='/music' render={() => <Music />} />\n          <Route path='/settings' render={() => <Settings />} />\n        </section>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialStore = [\n  { id: 1, avatar: 'https://goo.su/2FIK', name: 'William Roberts' },\n  { id: 2, avatar: 'https://goo.su/2Hbu', name: 'Morgan Burns' },\n  { id: 3, avatar: 'https://goo.su/2HCb', name: 'Mason James' },\n  { id: 4, avatar: 'https://goo.su/2hcC', name: 'Ashton Moore' },\n  { id: 5, avatar: 'https://goo.su/2Hcc', name: 'Moore Roberts' },\n  { id: 6, avatar: 'https://goo.su/2HCc', name: 'Burns Mason' },\n];\n\nconst friendsBoxReducer = (state = initialStore, action) => {\n  return state\n};\n\nexport default friendsBoxReducer;\n","import { createStore, combineReducers } from \"redux\";\nimport friendsBoxReducer from \"./friendsBoxReducer\";\nimport messagesReducer from \"./messagesReducer\";\nimport profileReducer from \"./profileReducer\";\n\nconst reducers = combineReducers({\n  profilePage: profileReducer,\n  messagesPage: messagesReducer,\n  friendsBox: friendsBoxReducer\n});\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/reduxStore';\n\nconst renderEntireTree = (state) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App state={state} dispatch={store.dispatch.bind(store)} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n};\n\n// Рендер приложения при загрузке страницы\nrenderEntireTree(store.getState());\n// Рендер приложения при обновлении state\nstore.subscribe(() => {\n  renderEntireTree(store.getState());\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}